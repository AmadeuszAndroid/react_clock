{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["getCurrentClockTime","Date","toUTCString","slice","Clock","state","time","timeUpdaterId","clockName","props","name","clockNameUpdaterId","this","setState","window","setInterval","console","info","prevProps","oldName","newName","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"sNAEA,SAASA,IACP,OAAO,IAAIC,MAAOC,cAAcC,OAAO,IAAK,GAOvC,IAAMC,EAAb,4MACEC,MAAQ,CACNC,KAAMN,IACNO,eAAgB,EAChBC,UAAW,EAAKC,MAAMC,KACtBC,oBAAqB,GALzB,uDAQE,WAAqB,IAAD,OAClBC,KAAKC,SAAS,CACZN,cAAeO,OAAOC,aAAY,WAChC,IAAMT,EAAON,IAGbgB,QAAQC,KAAKX,GACb,EAAKO,SAAS,CACZP,WAED,KACHK,mBAAoBG,OAAOC,aAAY,WACrC,EAAKF,SAAS,CACZL,UAAW,EAAKC,MAAMC,SAEvB,OAvBT,gCA2BE,SAAmBQ,GACjB,IAAMC,EAAUD,EAAUR,KACpBU,EAAUR,KAAKH,MAAMC,KAEvBS,IAAYC,GAEdJ,QAAQK,MAAR,uBAA8BF,EAA9B,eAA4CC,MAjClD,kCAqCE,WACEN,OAAOQ,cAAcV,KAAKP,MAAME,eAChCO,OAAOQ,cAAcV,KAAKP,MAAMM,sBAvCpC,oBA0CE,WACE,MAA4BC,KAAKP,MAAzBG,EAAR,EAAQA,UAAWF,EAAnB,EAAmBA,KAEnB,OACE,sBAAKiB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGf,IAGF,YAED,sBAAMe,UAAU,cAAhB,SACGjB,WAtDX,GAA2BkB,IAAMC,WCNjC,SAASC,IACP,IAAMC,EAAQ1B,KAAK2B,MAAMC,WAAW1B,OAAO,GAE3C,MAAM,SAAN,OAAgBwB,GAGX,IAAMG,EAAb,4MACEzB,MAAQ,CACN0B,UAAU,EACVvB,UAAW,UACXG,oBAAqB,GAJzB,uDAOE,WAAqB,IAAD,OAClBqB,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKtB,SAAS,CACZkB,UAAU,OAIdC,SAASC,iBAAiB,SAAS,WACjC,EAAKpB,SAAS,CACZkB,UAAU,OAIdnB,KAAKC,SAAS,CACZF,mBAAoBG,OAAOC,aAAY,WACrC,EAAKF,SAAS,CACZL,UAAWkB,QAEZ,UA1BT,kCA8BE,WACEZ,OAAOQ,cAAcV,KAAKP,MAAMM,sBA/BpC,oBAkCE,WACE,OACE,sBAAKY,UAAU,MAAf,UACE,6CAECX,KAAKP,MAAM0B,UAAY,cAAC,EAAD,CAAOrB,KAAME,KAAKP,MAAMG,mBAvCxD,GAAyBgB,IAAMC,WCP/BW,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.b6c55104.chunk.js","sourcesContent":["import React from 'react';\n\nfunction getCurrentClockTime() {\n  return new Date().toUTCString().slice(-12, -4);\n}\n\ntype ClockProps = {\n  name: string\n};\n\nexport class Clock extends React.Component<ClockProps> {\n  state = {\n    time: getCurrentClockTime(),\n    timeUpdaterId: -1,\n    clockName: this.props.name,\n    clockNameUpdaterId: -2,\n  };\n\n  componentDidMount() {\n    this.setState({\n      timeUpdaterId: window.setInterval(() => {\n        const time = getCurrentClockTime();\n\n        // eslint-disable-next-line no-console\n        console.info(time);\n        this.setState({\n          time,\n        });\n      }, 1000),\n      clockNameUpdaterId: window.setInterval(() => {\n        this.setState({\n          clockName: this.props.name,\n        });\n      }, 1),\n    });\n  }\n\n  componentDidUpdate(prevProps: Readonly<ClockProps>) {\n    const oldName = prevProps.name;\n    const newName = this.props.name;\n\n    if (oldName !== newName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${oldName} to ${newName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.state.timeUpdaterId);\n    window.clearInterval(this.state.clockNameUpdaterId);\n  }\n\n  render() {\n    const { clockName, time } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {time}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n    clockNameUpdaterId: -1,\n  };\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({\n        hasClock: false,\n      });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({\n        hasClock: true,\n      });\n    });\n\n    this.setState({\n      clockNameUpdaterId: window.setInterval(() => {\n        this.setState({\n          clockName: getRandomName(),\n        });\n      }, 3300),\n    });\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.state.clockNameUpdaterId);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}