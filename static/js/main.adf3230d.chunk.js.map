{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["getCurrentClockTime","Date","toUTCString","slice","Clock","state","time","timeUpdaterId","this","setState","window","setInterval","console","info","oldName","name","newName","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","clockName","clockNameUpdaterId","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"sNAEA,SAASA,IACP,OAAO,IAAIC,MAAOC,cAAcC,OAAO,IAAK,GAYvC,IAAMC,EAAb,4MACEC,MAA8B,CAC5BC,KAAMN,IACNO,eAAgB,GAHpB,uDAME,WAAqB,IAAD,OAClBC,KAAKC,SAAS,CACZF,cAAeG,OAAOC,aAAY,WAChC,IAAML,EAAON,IAGbY,QAAQC,KAAKP,GACb,EAAKG,SAAS,CACZH,WAED,SAhBT,gCAoBE,YAA6D,IAAlCQ,EAAiC,EAAvCC,KACLC,EAAYR,KAAKS,MAAvBF,KAEJD,IAAYE,GAEdJ,QAAQM,MAAR,uBAA8BJ,EAA9B,eAA4CE,MAzBlD,kCA6BE,WACEN,OAAOS,cAAcX,KAAKH,MAAME,iBA9BpC,oBAiCE,WACE,OACE,sBAAKa,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGZ,KAAKS,MAAMF,OAGb,YAED,sBAAMK,UAAU,cAAhB,SACGZ,KAAKH,MAAMC,cA3CtB,GAA2Be,IAAMC,WCXjC,SAASC,IACP,IAAMC,EAAQvB,KAAKwB,MAAMC,WAAWvB,OAAO,GAE3C,MAAM,SAAN,OAAgBqB,GASX,IAAMG,EAAb,4MACEtB,MAA4B,CAC1BuB,UAAU,EACVC,UAAW,UACXC,oBAAqB,GAJzB,uDAOE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKzB,SAAS,CACZmB,UAAU,OAIdG,SAASC,iBAAiB,SAAS,WACjC,EAAKvB,SAAS,CACZmB,UAAU,OAIdpB,KAAKC,SAAS,CACZqB,mBAAoBpB,OAAOC,aAAY,WACrC,EAAKF,SAAS,CACZoB,UAAWN,QAEZ,UA1BT,kCA8BE,WACEb,OAAOS,cAAcX,KAAKH,MAAMyB,sBA/BpC,oBAkCE,WACE,OACE,sBAAKV,UAAU,MAAf,UACE,6CAECZ,KAAKH,MAAMuB,UAAY,cAAC,EAAD,CAAOb,KAAMP,KAAKH,MAAMwB,mBAvCxD,GAAyBR,IAAMC,WCb/Ba,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.adf3230d.chunk.js","sourcesContent":["import React from 'react';\n\nfunction getCurrentClockTime() {\n  return new Date().toUTCString().slice(-12, -4);\n}\n\ntype ClockProps = {\n  name: string\n};\n\ninterface ClockState {\n  time: string\n  timeUpdaterId: number\n}\n\nexport class Clock extends React.Component<ClockProps, ClockState> {\n  state: Readonly<ClockState> = {\n    time: getCurrentClockTime(),\n    timeUpdaterId: -1,\n  };\n\n  componentDidMount() {\n    this.setState({\n      timeUpdaterId: window.setInterval(() => {\n        const time = getCurrentClockTime();\n\n        // eslint-disable-next-line no-console\n        console.info(time);\n        this.setState({\n          time,\n        });\n      }, 1000),\n    });\n  }\n\n  componentDidUpdate({ name: oldName }: Readonly<ClockProps>) {\n    const { name: newName } = this.props;\n\n    if (oldName !== newName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${oldName} to ${newName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.state.timeUpdaterId);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.time}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface AppState {\n  hasClock: boolean\n  clockName: string\n  clockNameUpdaterId: number\n}\n\nexport class App extends React.Component<{}, AppState> {\n  state: Readonly<AppState> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n    clockNameUpdaterId: -1,\n  };\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({\n        hasClock: false,\n      });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({\n        hasClock: true,\n      });\n    });\n\n    this.setState({\n      clockNameUpdaterId: window.setInterval(() => {\n        this.setState({\n          clockName: getRandomName(),\n        });\n      }, 3300),\n    });\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.state.clockNameUpdaterId);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}